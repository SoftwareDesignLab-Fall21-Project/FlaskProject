{"version":3,"sources":["components/navBar.js","pages/Landing.js","components/DatasetList.js","pages/DatasetPage.js","components/HardwareSet.js","components/HardwareList.js","components/ProjectSet.js","components/ProjectList.js","pages/HardwarePage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","signin","useContext","signedInContext","setSignIn","AppBar","className","position","Toolbar","variant","Typography","color","component","to","Button","style","marginRight","onClick","fetchData","a","axios","result","then","response","console","log","data","Card","CardContent","TextField","id","label","Landing","useState","user","Grid","container","direction","alignItems","justify","onSubmit","Event","preventDefault","FormData","target","fetch","method","body","name","marginTop","sx","m","size","type","columns","field","headerName","width","flex","renderCell","params","Tooltip","title","value","placement","IconButton","href","blue","DatasetList","items","rows","forEach","item","i","push","description","link","pageSize","rowsPerPageOptions","DatasetPage","isLoading","setLoading","setItems","useEffect","ok","Error","status","json","HardwareSet","props","updateHardwarePage","hwSetContext","capacity","available","number","projects","sliderNum","setSliderNum","setName","FormControl","InputLabel","Select","labelId","onChange","event","input","OutlinedInput","map","MenuItem","Name","append","Slider","defaultValue","step","min","max","parseInt","valueLabelDisplay","HardwareList","gridRow","name_1","capacity_1","available_1","name_2","capacity_2","available_2","ProjectSet","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","border","scope","HardwareSet1","HardwareSet2","ProjectList","createContext","HardwarePage","dummy","setDummy","setName_1","setCapacity_1","setAvailable_1","setName_2","setCapacity_2","setAvailable_2","setProjects","Provider","App","loginResponse","setLoginResponse","setSignin","path","exact","action","form","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4fe1dc1.chunk.js","sourcesContent":["import React, {useContext} from \"react\";\r\nimport {AppBar, IconButton, Toolbar, Typography, Button, CardContent, TextField, Card} from \"@mui/material\";\r\nimport './navBar.css'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { Route , withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {signedInContext} from \"../App.js\";\r\n\r\nfunction NavBar() {\r\n    const signin = useContext(signedInContext)[0];\r\n    const setSignIn = useContext(signedInContext)[1];\r\n    if (signin) {\r\n        return (\r\n            <AppBar className='navbar' position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                    <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            <Button variant=\"outlined\" color=\"primary\">Home</Button>\r\n                        </Link>\r\n                    </Typography>\r\n                    <div style={{marginRight: \"1%\"}}/>\r\n                    <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                        <Link to=\"/datasets\" className=\"nav-link\">\r\n                            <Button variant=\"outlined\" color=\"info\">Datasets</Button>\r\n                        </Link>\r\n                    </Typography>\r\n                    <div style={{marginRight: \"1%\"}}/>\r\n                    <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                        <Link to=\"/hardware\" className=\"nav-link\">\r\n                            <Button variant=\"outlined\" color=\"info\">Hardware Sets</Button>\r\n                        </Link>\r\n                    </Typography>\r\n                    <div style={{marginRight: \"1%\"}}/>\r\n                    <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            <Button variant=\"outlined\" color=\"info\"\r\n                                onClick={() => {\r\n                                    const fetchData = async () => {\r\n                                        const result = await axios(\r\n                                            'logout',\r\n                                        );\r\n                                        return result;\r\n                                    };\r\n                                    fetchData().then(\r\n                                        function(response){\r\n                                            console.log(response.data['success'] + '-- nav');\r\n                                            setSignIn(response.data['success']);\r\n                                        }\r\n                                    )\r\n                                    }}>\r\n                                Logout\r\n                               </Button>\r\n                        </Link>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n        <Card className=\"sign-in-dialog\">\r\n            <CardContent>\r\n                <h4>Already have an account?</h4>\r\n                <TextField className=\"username-password\" id=\"standard-basic\" label=\"Username\" variant=\"standard\" />\r\n                <TextField className=\"username-password\" id=\"standard-basic\" label=\"Password\" variant=\"standard\" />\r\n                <div id=\"button-wrapper\">\r\n                    <Button id=\"login-button\" variant=\"outlined\">Sign In</Button>\r\n                </div>\r\n                <h4>New User?</h4>\r\n                <TextField className=\"username-password\" id=\"standard-basic\" label=\"New Username\" variant=\"standard\" />\r\n                <TextField className=\"username-password\" id=\"standard-basic\" label=\"New Password\" variant=\"standard\" />\r\n                <div id=\"button-wrapper\">\r\n                    <Button id=\"login-button\" variant=\"outlined\">Sign Up</Button>\r\n                </div>\r\n            </CardContent>\r\n            <Button id=\"login-button\" variant=\"contained\" onClick={() => {\r\n                setSignIn(true);\r\n            }}>Development Signin</Button>\r\n        </Card>\r\n        )\r\n    }\r\n}\r\nexport default NavBar;","import './Landing.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Card, CardHeader, Button, CardContent, TextField, Grid} from \"@mui/material\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Landing(){\r\n\r\n    const [user, setUser] = useState(\"\");\r\n    // const [projectName, setProjectName] = useState(\"\");\r\n    //\r\n    // const updateProjectName = (Event) => {\r\n    //     setProjectName(Event.target.value);\r\n    // };\r\n\r\n    const createProject = (Event) => {\r\n        Event.preventDefault();\r\n        const data = new FormData(Event.target);\r\n\r\n        fetch('/create-project', {\r\n          method: 'POST',\r\n          body: data,\r\n        }).then((response) => {\r\n            console.log(response);\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome {user}</h1>\r\n            <Grid container direction={\"column\"} alignItems={\"center\"} justify={\"center\"}>\r\n                {/* <p> Use existing project</p>\r\n                <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Project Name\"\r\n                    variant=\"standard\"/>\r\n                <Button\r\n                    sx={{m: 1}}\r\n                    variant={\"outlined\"}\r\n                    size={\"small\"}>\r\n                    submit\r\n                </Button> */}\r\n                <Card>\r\n                    <CardContent>\r\n                        <div className=\"spacing-2\">\r\n                            <p> Create new project</p>\r\n                        </div>\r\n                        <div className=\"spacing-1\">\r\n                            <form onSubmit={createProject}>\r\n                                <div className=\"centered-form-element\"><TextField\r\n                                    id=\"standard-basic\"\r\n                                    label=\"Project Name\"\r\n                                    variant=\"standard\"\r\n                                    name=\"project_name\"/>\r\n                                </div>\r\n                                <div className=\"centered-form-element\"><TextField\r\n                                    id=\"standard-basic\"\r\n                                    label=\"Project Description\"\r\n                                    variant=\"standard\"\r\n                                    name=\"project_description\"/>\r\n                                </div>\r\n                                <div className=\"centered-form-element\"><TextField\r\n                                    id=\"standard-basic\"\r\n                                    label=\"Project ID\"\r\n                                    variant=\"standard\"\r\n                                    name=\"project_id\"/>\r\n                                </div>\r\n                                <div className=\"centered-form-element\" style={{marginTop: \"10%\"}}>\r\n\r\n                                    <Button\r\n                                        sx={{m: 1}}\r\n                                        variant={\"outlined\"}\r\n                                        size={\"small\"}\r\n                                        type=\"submit\">\r\n                                        Create\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Landing;","import \"./DatasetList.css\"\r\nimport React from \"react\";\r\nimport {DataGrid, GridColDef} from '@mui/x-data-grid';\r\nimport {GridRenderCellParams} from \"@mui/x-data-grid\";\r\nimport {IconButton, Tooltip} from \"@mui/material\";\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport {blue} from '@mui/material/colors';\r\n\r\nconst columns: GridColDef[] = [\r\n    { field: 'title', headerName: 'Title', width: 150, flex: 0.2, renderCell: (params: GridRenderCellParams<string>) => (\r\n        <Tooltip title={params.value} placement=\"top-start\">\r\n            <div>{params.value}</div>\r\n        </Tooltip>\r\n        )},\r\n    { field: 'description', headerName: 'Description', flex: 1, renderCell: (params: GridRenderCellParams<string>) => (\r\n        <Tooltip title={params.value} placement=\"top-start\">\r\n            <div>{params.value}</div>\r\n        </Tooltip>\r\n\r\n        )},\r\n    { field: 'size', headerName: 'Size', width: 150, renderCell: (params: GridRenderCellParams<string>) => (\r\n        <Tooltip title={params.value[0]} placement=\"top-start\">\r\n            <div>{params.value[1]}</div>\r\n        </Tooltip>\r\n\r\n        )},\r\n    { field: 'link', headerName: 'Link', width: 150, renderCell: (params: GridRenderCellParams<string>) => (\r\n        <IconButton href={params.value}>\r\n            <DownloadIcon sx={{ color: blue['800'] }}/>\r\n        </IconButton>\r\n        )},\r\n];\r\n\r\nfunction DatasetList(items){\r\n\r\n    let rows  = [];\r\n    items[\"datasets\"].forEach((item, i)=> {\r\n        rows.push({\r\n            id: i,\r\n            title: item[\"title\"],\r\n            description: item[\"description\"],\r\n            size: [item[\"file_size\"] + \" bytes\", item[\"file_size_human\"]],\r\n            link: item[\"file_url\"]\r\n        });\r\n    });\r\n\r\n    // const clickHandler = (event) => {\r\n    //     console.log(\"click!\");\r\n    // };\r\n\r\n    return(\r\n        <div className=\"dataset-list-container\">\r\n            <DataGrid rows={rows}\r\n                      columns={columns}\r\n                      // componentsProps={{\r\n                      //     row: {\r\n                      //       onMouseOver: clickHandler,\r\n                      //     },\r\n                      // }}\r\n                      className=\"dataset-list\"\r\n                      pageSize={10}\r\n                      rowsPerPageOptions={[10]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatasetList;","import \"./DatasetPage.css\";\r\nimport DatasetList from \"../components/DatasetList\";\r\nimport axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nfunction DatasetPage(){\r\n    const [isLoading, setLoading] = useState(true)\r\n    const [items, setItems] = useState([])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch('/static/datasets/dump.json',\r\n                {\"method\":\"GET\"}\r\n            )\r\n            .then(response => {\r\n                if(!response.ok)\r\n                    throw new Error(\"HTTP request error: \" + response.status);\r\n                return response.json();\r\n            })\r\n            .then(json => {\r\n                setItems(json);\r\n                setLoading(false);\r\n\r\n\r\n            });\r\n    }, []);\r\n\r\n    if(isLoading){\r\n        return(\r\n            <p>Loading...</p>\r\n        );\r\n    }else{\r\n        return (\r\n        <div>\r\n            {DatasetList(items)}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatasetPage;","import \"./HardwareList.css\"\r\nimport {Card, CardHeader, Button, CardContent, TextField, Box, InputLabel, MenuItem, FormControl, Select, OutlinedInput, Slider} from \"@mui/material\";\r\nimport React, { useState, useEffect, useContext} from 'react';\r\nimport {hwSetContext} from \"../pages/HardwarePage.js\";\r\n\r\nfunction HardwareSet(props){\r\n    const updateHardwarePage = useContext(hwSetContext)[0];\r\n    const capacity = props.capacity;\r\n\r\n    // const [capacity, setCapacity] = useState(props.capacity);\r\n    const available = useContext(hwSetContext)[props.number];\r\n    const projects = useContext(hwSetContext)[3];\r\n\r\n    // const [projects, setProjects] = useState(props.projects);\r\n\r\n   \r\n    const [sliderNum, setSliderNum] = useState(0);\r\n\r\n    const [name, setName] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const checkoutHardware = (Event) => {\r\n        Event.preventDefault();\r\n        const data = new FormData(Event.target);\r\n        data.append('project_name', name);\r\n        data.append('hw_name', props.name);\r\n        data.append('number', sliderNum);\r\n\r\n        fetch('/checkout-hw', {\r\n          method: 'POST',\r\n          body: data,\r\n        }).then(response => {\r\n                if(!response.ok)\r\n                    throw new Error(\"HTTP request error: \" + response.status);\r\n                return response.json();\r\n        }).then(json => {\r\n            if (json[0]['success'] === \"true\") {\r\n                updateHardwarePage();\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    const returnHardware = () => {\r\n        const data = new FormData(Event.target);\r\n        data.append('project_name', name);\r\n        data.append('hw_name', props.name);\r\n        data.append('number', capacity-available);\r\n\r\n        fetch('/return-hw', {\r\n          method: 'POST',\r\n          body: data,\r\n        }).then(response => {\r\n                if(!response.ok)\r\n                    throw new Error(\"HTTP request error: \" + response.status);\r\n                return response.json();\r\n        }).then(json => {\r\n            if (json[0]['success'] === \"true\") {\r\n                updateHardwarePage();\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Card className=\"hardware-card\">\r\n            <CardContent>\r\n                <h2>{props.name}</h2>\r\n                <h5>Capacity: {capacity}</h5>\r\n                <h5>Available: {available}</h5>\r\n                <h4>Select Project and Amount of Hardware to Checkout or Return All Hardware for a Selected Project:</h4>\r\n                <FormControl sx={{ m: 1, width: 300 }}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        input={<OutlinedInput label=\"Name\" />}\r\n                    >\r\n                        {projects.map((projects) => (\r\n                        <MenuItem\r\n                            key={projects.Name}\r\n                            value={projects.Name}\r\n                        >\r\n                        {projects.Name}\r\n                        </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <form onSubmit={checkoutHardware}>\r\n                    <div id=\"slider-control\">\r\n                    <Slider\r\n                        aria-label=\"Always visible\"\r\n                        defaultValue={0}\r\n                        // getAriaValueText={valuetext}\r\n                        step={1}\r\n                        min={0}\r\n                        max={parseInt(available)}\r\n                        valueLabelDisplay=\"on\"\r\n                        name=\"num_hw\"\r\n                        onChange={(Event) => {setSliderNum(Event.target.value)}}\r\n                    />\r\n                    </div>\r\n                    <div id=\"button-return\" >\r\n                        <Button variant=\"outlined\" type=\"submit\">Checkout Selected</Button>\r\n                    </div>\r\n                </form>\r\n                <div id=\"button-return\">\r\n                    <Button variant=\"outlined\" onClick={returnHardware}>Return All</Button>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default HardwareSet;","import \"./HardwareList.css\"\r\nimport HardwareSet from \"./HardwareSet\";\r\n\r\nfunction HardwareList(props){\r\n\r\n    // console.log(props.name_1);\r\n    // console.log(props.name_2);\r\n    // console.log(props.capacity_1);\r\n    // console.log(props.capacity_2);\r\n    // console.log(props.available_1);\r\n    // console.log(props.available_2);\r\n    \r\n\r\n    return (\r\n        <div className={\"hardware-list\"}>\r\n            <HardwareSet\r\n                className={\"hardware-set\"}\r\n                style={{gridRow: 0}}\r\n                name = {props.name_1}\r\n                number = {1}\r\n                capacity = {props.capacity_1}\r\n                available = {props.available_1}\r\n                projects = {props.projects}\r\n            />\r\n            <HardwareSet\r\n                className={\"hardware-set\"}\r\n                style={{gridRow: 1}}\r\n                name = {props.name_2}\r\n                number = {2}\r\n                capacity = {props.capacity_2}\r\n                available = {props.available_2}\r\n                projects = {props.projects}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default HardwareList;","import \"./ProjectList.css\"\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper} from \"@mui/material\";\r\nimport React, {useState, useEffect, useContext} from 'react';\r\nimport {hwSetContext} from \"../pages/HardwarePage\";\r\n\r\nfunction ProjectSet(props){\r\n\r\n    const projects = useContext(hwSetContext)[3];\r\n\r\n    /*\r\n    function createData(Name, HardwareSet1, HardwareSet2) {\r\n        return { Name, HardwareSet1, HardwareSet2};\r\n      }\r\n      \r\n      const projects = [\r\n        createData('Project A', 0, 0),\r\n        createData('Project B', 0, 0),\r\n      ];\r\n      */\r\n\r\n\r\n    return (\r\n    <TableContainer component={Paper} className = \"project-table\">\r\n      <Table sx={{ minWidth: 650 }} size = \"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Project Name</TableCell>\r\n            <TableCell align=\"right\">HardwareSet1 qty.</TableCell>\r\n            <TableCell align=\"right\">HardwareSet2 qty.</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {projects.map((projects) => (\r\n            <TableRow\r\n              key={projects.Name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {projects.Name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{projects.HardwareSet1}</TableCell>\r\n              <TableCell align=\"right\">{projects.HardwareSet2}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectSet;","import \"./ProjectList.css\"\r\nimport ProjectSet from \"./ProjectSet\";\r\nimport {useContext} from \"react\";\r\nimport {hwSetContext} from \"../pages/HardwarePage\";\r\n\r\nfunction ProjectList(props){\r\n    const projects = useContext(hwSetContext)[3];\r\n    // console.log(props.name_1);\r\n    // console.log(props.name_2);\r\n    // console.log(props.capacity_1);\r\n    // console.log(props.capacity_2);\r\n    // console.log(props.available_1);\r\n    // console.log(props.available_2);\r\n    \r\n\r\n    return (\r\n        <div className={\"project-list\"}>\r\n            <ProjectSet\r\n                projects = {projects}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectList;","import React, {useState, useEffect, createContext} from 'react';\r\nimport \"./HardwarePage.css\";\r\nimport HardwareList from \"../components/HardwareList\";\r\nimport axios from 'axios';\r\nimport ProjectList from '../components/ProjectList';\r\n\r\n\r\n\r\nexport const hwSetContext = createContext();\r\n\r\n\r\nfunction HardwarePage(){\r\n\r\n    const [dummy, setDummy] = useState(false);\r\n    //hardware sets\r\n    const [name_1, setName_1] = useState(\"\")\r\n    const [capacity_1, setCapacity_1] = useState(0)\r\n    const [available_1, setAvailable_1] = useState(0)\r\n    const [name_2, setName_2] = useState(\"\")\r\n    const [capacity_2, setCapacity_2] = useState(0)\r\n    const [available_2, setAvailable_2] = useState(0)\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    //projects\r\n    const [projects, setProjects] = useState([])\r\n\r\n    // useEffect(()=>{\r\n    //     fetch('/hwcapacity', {\r\n    //         headers : { \r\n    //           'Content-Type': 'application/json',\r\n    //           'Accept': 'application/json'\r\n    //          }\r\n      \r\n    //       }).then(response =>{\r\n    //         if(response.ok){\r\n    //             return response.json()\r\n    //         }\r\n    //     }).then(data => console.log(data))\r\n    // },[])\r\n\r\n    const updateSets = () =>{\r\n        setDummy(!dummy);\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log('got here');\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                '/get-db',\r\n            );\r\n            console.log('got here');\r\n            console.log(result);\r\n\r\n            return result;\r\n        };\r\n        fetchData().then(\r\n            function(response){\r\n                console.log(response);\r\n                setName_1(response.data[\"hardware\"][0]['Name']);\r\n                setCapacity_1(response.data[\"hardware\"][0]['Capacity']);\r\n                setAvailable_1(response.data[\"hardware\"][0]['Available']);\r\n                setName_2(response.data[\"hardware\"][1]['Name']);\r\n                setCapacity_2(response.data[\"hardware\"][1]['Capacity']);\r\n                setAvailable_2(response.data[\"hardware\"][1]['Available']);\r\n\r\n                //projects\r\n                setProjects(response.data[\"projects\"]);\r\n\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }, [dummy]);\r\n\r\n    if(isLoading){\r\n        return(\r\n            <p>Loading...</p>\r\n        );\r\n    }else{\r\n        return (\r\n            <hwSetContext.Provider value={[updateSets, available_1, available_2, projects]}>\r\n                <div className={\"hardware-page-container\"}>\r\n                    <HardwareList\r\n                        name_1 = {name_1}\r\n                        name_2 = {name_2}\r\n                        capacity_1 = {capacity_1}\r\n                        capacity_2 = {capacity_2}\r\n                        // available_1 = {available_1}\r\n                        // available_2 = {available_2}\r\n                        // projects = {projects}\r\n                    />\r\n                    <ProjectList\r\n                        // projects = {projects}\r\n                    />\r\n                </div>\r\n            </hwSetContext.Provider>\r\n    );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default HardwarePage;","import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport React, {useState, useEffect, createContext} from 'react';\r\nimport NavBar from \"./components/navBar\";\r\nimport Landing from \"./pages/Landing\";\r\nimport DatasetPage from \"./pages/DatasetPage\";\r\nimport HardwarePage from './pages/HardwarePage';\r\nimport {Card, CardHeader, Button, CardContent, TextField} from \"@mui/material\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport const signedInContext = createContext();\r\n\r\nfunction App() {\r\n\r\n    const [loginResponse, setLoginResponse] = useState(null);\r\n    const [signin, setSignin] = useState(false);\r\n\r\n\r\n    const handleSubmitLogin = (Event) => {\r\n        Event.preventDefault();\r\n        const data = new FormData(Event.target);\r\n\r\n        fetch('/login', {\r\n          method: 'POST',\r\n          body: data,\r\n        }).then((response) => {\r\n            setLoginResponse(response);\r\n        });\r\n    }\r\n\r\n    const handleSubmitRegister = (Event) => {\r\n        Event.preventDefault();\r\n        const data = new FormData(Event.target);\r\n\r\n        fetch('/register', {\r\n          method: 'POST',\r\n          body: data,\r\n        }).then((response) => {\r\n            setLoginResponse(response);\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                'get-user',\r\n            );\r\n            return result;\r\n        };\r\n        fetchData().then(\r\n            function(response){\r\n                console.log(\"useEffect -- App\");\r\n                console.log(response.data['success']);\r\n                if (response.data['success'] === \"true\") {\r\n                    setSignin(true);\r\n                }else{\r\n                    setSignin(false);\r\n                }\r\n            }\r\n        )\r\n    }, [signin, loginResponse]);\r\n\r\n\r\n    if(!signin){\r\n        return (\r\n            <div>\r\n                <Card className=\"sign-in-dialog\">\r\n                    <CardContent>\r\n                        <form id=\"loginForm\" action=\"/login\" method=\"POST\" onSubmit={handleSubmitLogin}>\r\n                            <h4>Already have an account?</h4>\r\n                            <TextField className=\"username-password\" id=\"standard-basic\" label=\"Username\"\r\n                                       variant=\"standard\" name=\"username\"/>\r\n                            <TextField className=\"username-password\" id=\"standard-basic\" label=\"Password\"\r\n                                       variant=\"standard\" name=\"password\"/>\r\n                            <div id=\"button-wrapper\">\r\n                                <Button id=\"login-button\" variant=\"outlined\" type=\"submit\" form=\"loginForm\">\r\n                                    Log In\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n\r\n                        <form id=\"signupForm\" action=\"/signup\" method=\"POST\" onSubmit={handleSubmitRegister}>\r\n                            <h4 className=\"centered-form-bold\">New User?</h4>\r\n                            <TextField className=\"username-password\" id=\"standard-basic\" label=\"New Username\"\r\n                                       variant=\"standard\" name=\"newuser\"/>\r\n                            <TextField className=\"username-password\" id=\"standard-basic\" label=\"New Password\"\r\n                                       variant=\"standard\" name=\"newpass\"/>\r\n                            <div id=\"button-wrapper\">\r\n                                <Button id=\"login-button\" variant=\"outlined\" type=\"submit\">\r\n                                    Sign Up\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }else{\r\n        return (\r\n            <>\r\n                <signedInContext.Provider value={[signin, setSignin]}>\r\n                   <Router>\r\n                        <NavBar/>\r\n                        <div id=\"page-container\">\r\n                    </div>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Landing} />\r\n                        <Route path=\"/datasets\">\r\n                            <DatasetPage/>\r\n                        </Route>\r\n                        <Route path=\"/hardware\" exact component={HardwarePage}/>\r\n                    </Switch>\r\n\r\n                </Router>\r\n                </signedInContext.Provider>\r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n  //document.querySelector('#app')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}